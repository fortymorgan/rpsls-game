export default class Player {
  constructor(socket) {
    this.socket = socket;
  }

  // send a message generated by the game
  sendSystemMessage(message) {
    this.socket.emit('message', { author: 's', message });
  }

  // send a message generated by one of the players
  sendMessage(message) {
    this.socket.emit('message', message);
  }

  // send a signal to the start of the game with the names of the players
  startGame(name) {
    this.socket.emit('start', name);
  }

  // send a signal at the end of the game with the results
  finishGame(result) {
    this.socket.emit('finish', result);
  }

  // send a signal to reset the game for the next round
  resetGame() {
    this.socket.emit('reset');
  }

  // send an opponent's turn at the end of the game
  sendOpponentsTurn(turn) {
    this.socket.emit('opponent', turn);
  }

  // send a session id for the link generating
  sendSessionId(id) {
    this.socket.emit('session', id);
  }

  // send a player's turn
  sendTurn(turn) {
    this.socket.emit('turn', turn);
  }

  // send a signal when the opponent leaves the game
  onOpponentLeft() {
    this.socket.emit('left');
  }

  // subscribe to client events with callback
  subscribeTo(event, callback) {
    this.socket.on(event, callback);
  }
}
