export default class Player {
  constructor(socket) {
    this.socket = socket;
  }

  // send message generated by the game
  sendSystemMessage(message) {
    this.socket.emit('message', { author: 's', message });
  }

  // send message generated by one of the players
  sendMessage(message) {
    this.socket.emit('message', message);
  }

  // send signal on game start with players name
  startGame(name) {
    this.socket.emit('start', name);
  }

  // send signal on game over with result
  finishGame(result) {
    this.socket.emit('finish', result);
  }

  // send signal to reset game for next round
  resetGame() {
    this.socket.emit('reset');
  }

  // send opponents turn on game over
  sendOpponentsTurn(turn) {
    this.socket.emit('opponent', turn);
  }

  // send session id for link generating
  sendSessionId(id) {
    this.socket.emit('session', id);
  }

  // send players turn
  sendTurn(turn) {
    this.socket.emit('turn', turn);
  }

  // send signal on opponent left the game
  onOpponentLeft() {
    this.socket.emit('left');
  }

  // subscribe to client events with callback
  subscribeTo(event, callback) {
    this.socket.on(event, callback);
  }
}
